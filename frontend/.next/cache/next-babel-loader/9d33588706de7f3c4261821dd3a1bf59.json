{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanvir\\\\Desktop\\\\avocado\\\\frontend\\\\components\\\\admin\\\\AdminProductsList.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nconst ADMIN_POSTS_QUERY = gql`\n  query ADMIN_POSTS_QUERY {\n    posts {\n      id\n      content\n      name\n      price\n      saleprice\n      image\n    }\n  }\n`;\n\nclass AdminProductsList extends Component {\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"Posts\", ' ', __jsx(\"a\", {\n      href: \"/admin/add-new-product\",\n      className: \"add-new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, \"Add New Product\")), __jsx(\"table\", {\n      className: \"list-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, __jsx(\"th\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, \"Name\"), __jsx(\"th\", {\n      className: \"cat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, \"Category\"), __jsx(\"th\", {\n      className: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, \"Date\"))), __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, __jsx(Query, {\n      query: ADMIN_POSTS_QUERY,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, ({\n      data,\n      error,\n      loading\n    }) => {\n      if (loading) return __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }\n      }, \"Loading\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 23\n        }\n      }), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 23\n        }\n      }));\n      if (error) return __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 23\n        }\n      }, \"Error\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 23\n        }\n      }), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }\n      }));\n      return data.posts.map(post => __jsx(\"tr\", {\n        key: post.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }\n      }, __jsx(\"td\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, __jsx(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }\n      }, __jsx(\"a\", {\n        href: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, post.name)), __jsx(\"span\", {\n        className: \"hover-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 23\n        }\n      }, __jsx(\"a\", {\n        className: \"edit\",\n        href: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, \"Edit\"), __jsx(\"a\", {\n        className: \"delete\",\n        href: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, \"Delete\"))), __jsx(\"td\", {\n        className: \"cat\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, post.content), __jsx(\"td\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, \"12 December 2019\")));\n    }))));\n  }\n\n}\n\nexport default AdminProductsList;","map":{"version":3,"sources":["C:/Users/Tanvir/Desktop/avocado/frontend/components/admin/AdminProductsList.js"],"names":["React","Component","Query","gql","ADMIN_POSTS_QUERY","AdminProductsList","render","data","error","loading","posts","map","post","id","name","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Query } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\n\r\nconst ADMIN_POSTS_QUERY = gql`\r\n  query ADMIN_POSTS_QUERY {\r\n    posts {\r\n      id\r\n      content\r\n      name\r\n      price\r\n      saleprice\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\nclass AdminProductsList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          Posts{' '}\r\n          <a href=\"/admin/add-new-product\" className=\"add-new\">\r\n            Add New Product\r\n          </a>\r\n        </h3>\r\n        <table className=\"list-table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"name\">Name</th>\r\n              <th className=\"cat\">Category</th>\r\n              <th className=\"date\">Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <Query query={ADMIN_POSTS_QUERY}>\r\n              {({ data, error, loading }) => {\r\n                if (loading)\r\n                  return (\r\n                    <tr>\r\n                      <td>Loading</td>\r\n                      <td />\r\n                      <td />\r\n                    </tr>\r\n                  );\r\n                if (error)\r\n                  return (\r\n                    <tr>\r\n                      <td>Error</td>\r\n                      <td />\r\n                      <td />\r\n                    </tr>\r\n                  );\r\n                return data.posts.map(post => (\r\n                  <tr key={post.id}>\r\n                    <td className=\"name\">\r\n                      <h6>\r\n                        <a href=\"\">{post.name}</a>\r\n                      </h6>\r\n                      <span className=\"hover-only\">\r\n                        <a className=\"edit\" href=\"\">\r\n                          Edit\r\n                        </a>\r\n                        <a className=\"delete\" href=\"\">\r\n                          Delete\r\n                        </a>\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"cat\">{post.content}</td>\r\n                    <td className=\"date\">12 December 2019</td>\r\n                  </tr>\r\n                ));\r\n              }}\r\n            </Query>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminProductsList;\r\n"]},"metadata":{},"sourceType":"module"}